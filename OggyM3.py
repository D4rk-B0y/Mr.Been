#Tera Papa ABIR 
# https://www.github.com/D4rk-B0y 
# Time : Tue Nov 29 21:10:24 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))